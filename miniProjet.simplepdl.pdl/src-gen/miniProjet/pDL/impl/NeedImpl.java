/**
 * generated by Xtext 2.32.0
 */
package miniProjet.pDL.impl;

import miniProjet.pDL.BOOLEAN;
import miniProjet.pDL.Need;
import miniProjet.pDL.PDLPackage;
import miniProjet.pDL.Ressource;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Need</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link miniProjet.pDL.impl.NeedImpl#getQuantityNeeded <em>Quantity Needed</em>}</li>
 *   <li>{@link miniProjet.pDL.impl.NeedImpl#getRessource <em>Ressource</em>}</li>
 *   <li>{@link miniProjet.pDL.impl.NeedImpl#getUsed <em>Used</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NeedImpl extends ProcessElementImpl implements Need
{
  /**
   * The default value of the '{@link #getQuantityNeeded() <em>Quantity Needed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQuantityNeeded()
   * @generated
   * @ordered
   */
  protected static final int QUANTITY_NEEDED_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getQuantityNeeded() <em>Quantity Needed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQuantityNeeded()
   * @generated
   * @ordered
   */
  protected int quantityNeeded = QUANTITY_NEEDED_EDEFAULT;

  /**
   * The cached value of the '{@link #getRessource() <em>Ressource</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRessource()
   * @generated
   * @ordered
   */
  protected Ressource ressource;

  /**
   * The default value of the '{@link #getUsed() <em>Used</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUsed()
   * @generated
   * @ordered
   */
  protected static final BOOLEAN USED_EDEFAULT = BOOLEAN.TRUE;

  /**
   * The cached value of the '{@link #getUsed() <em>Used</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUsed()
   * @generated
   * @ordered
   */
  protected BOOLEAN used = USED_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NeedImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PDLPackage.Literals.NEED;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getQuantityNeeded()
  {
    return quantityNeeded;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setQuantityNeeded(int newQuantityNeeded)
  {
    int oldQuantityNeeded = quantityNeeded;
    quantityNeeded = newQuantityNeeded;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PDLPackage.NEED__QUANTITY_NEEDED, oldQuantityNeeded, quantityNeeded));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Ressource getRessource()
  {
    if (ressource != null && ressource.eIsProxy())
    {
      InternalEObject oldRessource = (InternalEObject)ressource;
      ressource = (Ressource)eResolveProxy(oldRessource);
      if (ressource != oldRessource)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PDLPackage.NEED__RESSOURCE, oldRessource, ressource));
      }
    }
    return ressource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Ressource basicGetRessource()
  {
    return ressource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRessource(Ressource newRessource)
  {
    Ressource oldRessource = ressource;
    ressource = newRessource;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PDLPackage.NEED__RESSOURCE, oldRessource, ressource));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BOOLEAN getUsed()
  {
    return used;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUsed(BOOLEAN newUsed)
  {
    BOOLEAN oldUsed = used;
    used = newUsed == null ? USED_EDEFAULT : newUsed;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PDLPackage.NEED__USED, oldUsed, used));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PDLPackage.NEED__QUANTITY_NEEDED:
        return getQuantityNeeded();
      case PDLPackage.NEED__RESSOURCE:
        if (resolve) return getRessource();
        return basicGetRessource();
      case PDLPackage.NEED__USED:
        return getUsed();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PDLPackage.NEED__QUANTITY_NEEDED:
        setQuantityNeeded((Integer)newValue);
        return;
      case PDLPackage.NEED__RESSOURCE:
        setRessource((Ressource)newValue);
        return;
      case PDLPackage.NEED__USED:
        setUsed((BOOLEAN)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PDLPackage.NEED__QUANTITY_NEEDED:
        setQuantityNeeded(QUANTITY_NEEDED_EDEFAULT);
        return;
      case PDLPackage.NEED__RESSOURCE:
        setRessource((Ressource)null);
        return;
      case PDLPackage.NEED__USED:
        setUsed(USED_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PDLPackage.NEED__QUANTITY_NEEDED:
        return quantityNeeded != QUANTITY_NEEDED_EDEFAULT;
      case PDLPackage.NEED__RESSOURCE:
        return ressource != null;
      case PDLPackage.NEED__USED:
        return used != USED_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (quantityNeeded: ");
    result.append(quantityNeeded);
    result.append(", used: ");
    result.append(used);
    result.append(')');
    return result.toString();
  }

} //NeedImpl
